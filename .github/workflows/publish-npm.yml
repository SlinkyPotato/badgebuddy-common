#file: noinspection YAMLSchemaValidation
name: Publish NPM Package
on:
  push:
    branches:
      - release/main

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  prepare-versions:
    outputs:
      pnpm_version: ${{ steps.pnpm-version.outputs.prop }}
      node_version: ${{ steps.node-version.outputs.prop }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Retrieve Node Version
        id: node-version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: 'package.json'
          prop_path: 'engines.node'
      - name: Retrieve PNPM Version
        id: pnpm-version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: 'package.json'
          prop_path: 'engines.pnpm'
  publish-npm:
    needs: prepare-versions
    environment:
      name: production
      url: "https://www.npmjs.com/package/@solidchain/badge-buddy-common/v/${{ steps.package-version.outputs.prop }}"
    outputs:
      package_version: ${{ steps.package-version.outputs.prop }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.prepare-versions.outputs.node_version }}
      - run: git config user.name "github-action[bot]"
      - run: git config user.email "<>"
      - run: npm install -g pnpm@${{ needs.prepare-versions.outputs.pnpm_version }}
      - run: pnpm install
      - run: pnpm test
      - run: npx standard-version
      - name: Retrieve Package Version
        id: package-version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: 'package.json'
          prop_path: 'version'
      - run: git push --follow-tags
      - run: pnpm build
      - uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.NPM_PUBLISH_TOKEN }}
          access: 'public'
          tag: 'latest'
      - uses: vimtor/action-zip@v1
        with:
          files: dist/ CHANGELOG.md LICENSE.md README.md package.json
          dest: dist.zip
      - run: gh release create --generate-notes --verify-tag v${{ steps.package-version.outputs.prop }} dist.zip
  post-release-sync:
    needs: publish-npm
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.prepare-versions.outputs.node_version }}
      - run: git config user.name "github-action[bot]"
      - run: git config user.email "<>"
      - run: git fetch origin
      - run: git pull origin release/main
      - run: gh pr create --base main --fill --title "v${{ needs.publish-npm.outputs.package_version }} sync release/main into main" | exit 0
      - run: gh pr merge --auto -m | exit 0
      - run: gh pr create --base dev --fill --title "v${{ needs.publish-npm.outputs.package_version }} sync release/main into dev" | exit 0
      - run: gh pr merge --auto -m | exit 0
