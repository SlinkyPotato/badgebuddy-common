#file: noinspection YAMLSchemaValidation
name: Publish NPM Staging Package
on:
  push:
    branches:
      - release/dev
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  publish-npm-staging:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    environment:
      name: staging
      url: "https://www.npmjs.com/package/@solidchain/badge-buddy-common/v/${{ steps.package-version.outputs.prop }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'
      - run: git config user.name "github-action[bot]"
      - run: git config user.email "<>"
      - run: pnpm install --frozen-lockfile
      - run: pnpm standard-version --prerelease --dry-run > changes.md | exit 0
      - run: pnpm standard-version --prerelease
      - run: pnpm build
      - run: pnpm test
      - name: Retrieve Package Version
        id: package-version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: 'package.json'
          prop_path: 'version'
      - run: git push --follow-tags
      - uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.NPM_PUBLISH_TOKEN }}
          access: 'public'
          tag: 'next'
      - run: gh pr edit -F release.md | exit 0
      - run: gh pr create --base main -F release.md --title "deploy v${{ steps.package-version.outputs.prop }} to production" | exit 0
      - run: git checkout dev
      - run: git merge --no-ff release/dev -m "sync branch release/dev v${{ steps.package-version.outputs.prop }} into dev" | exit 0
      - run: git push
